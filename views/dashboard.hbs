<!DOCTYPE html>
<html lang="en">
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
      <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0"/>
      <title>{{title}}</title>
      <style>
         footer{
            position:fixed;
            bottom:0;
            width:100%;
         }
      </style>
      <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
      <link rel='stylesheet' href='/css/material.css' />
   </head>
   <body>
      

      {{!-- navidation bar --}}
      <nav class="light-blue lighten-1" role="navigation">
         <div class="nav-wrapper container">
            <a id="logo-container" href="#" class="brand-logo"></a>
            <ul class="right hide-on-med-and-down">
               <li>
                  <a data-target="modal1" class="btn-small waves-effect waves-light orange modal-trigger">{{username}}</a>
               </li>
            </ul>
            <ul id="nav-mobile" class="sidenav">
               <li><a href="#">Navbar Link</a></li>
            </ul>
            <a href="#" data-target="nav-mobile" class="sidenav-trigger"><i class="material-icons">menu</i></a>
         </div>
      </nav>


      {{!-- main content container --}}
      <div class="container">
         <div class="section">
            <div class="row">
               <div class="col m8">
                  {{!-- card to display old chats of room --}}
                  <div class="card grey-1">
                     <span class="card-title"> Community Chat</span>
                        <hr>
                     <div class="card-content">
                        <div style="overflow-y: scroll; height:350px" id="messageOutput"></div>
                     </div>
                     </div>
                  </div>
               <div class="col m4">
                  {{!-- textarea to send messages --}}
                  <div class="input-field col s12">
                     <textarea class="materialize-textarea" id="messageInput"></textarea>
                     <label for="textarea">Textarea</label>
                     <button class="waves-effect waves-light btn-small orange" id="sendMessageButton">Send</button>
                  </div>
               </div>
            </div>
         </div>
         <br>
         <br>
      </div>
   
   
      {{!-- footer with details --}}
      <footer class="page-footer light-blue lighten-1" >
         <div class="footer-copyright">
            <div class="container">
               <a class="white-text " href="https://github.com/YashKumarVerma/nodeChat">View Source Code</a>
            </div>
         </div>
      </footer>
   

   </body>
   
    <script src="/js/jquery.js" type="text/javascript" ></script>
    <script src="/js/material.js" type="text/javascript" ></script>
    <script src="/js/socket.js" type="text/javascript" ></script>
   <script>
      $(document).ready(function(){
        $('.sidenav').sidenav();
        $('.modal').modal();
      });

      //messageOutput
      //sendMessageButton
      var socket = io.connect();

      // get handles for items
      var sendButton = $("#sendMessageButton");
      var messageOut = $("#messageOutput");
      var messageIn = $("#messageInput");

      // send hello world beacon to the world!
      socket.emit("newUser", {username:'{{username}}'});

      // request all data from server
      $.getJSON({
        url:'./messageDump',
        success: (data) => {
          $(data).each((_,data) => {
              // check if given message tppe is url or not
              if(data.type=='url'){
                  // create a card regarding the URL
                  var str = "";
                  str += '<div class="card grey lighten-4">';
                  str += '<div class="card-content">';
                  str += '<span class="card-title"><a href="'+data.og_url+'">'+data.og_title+'</a></span>';
                  str +=  '<p>'+data.og_desc+'</p>';
                  str += '</div>';
                  str +=  '</div>';
                  messageOut.append(str);
              }
              else if(data.type=='msg'){
                  // append the emited message as normal text
                  messageOut.append("<div><p><b>"+data.fromUser+"</b>:"+data.message+"</p></div>");
              }
          });
        }
      });

      // handle send event
      sendButton.on("click", function(){
            // send data to socket
            const payLoad = {
               messageString : messageIn.val(),
               sender:'{{username}}'
            };
            socket.emit("newMessage", payLoad);
      });



      // check for new events
      socket.on("newMessage", function(data){ 
         // reset send i/o
         messageIn.val("");
         M.textareaAutoResize($("#messageInput"));

         // check if given message tppe is url or not
         if(data.type=='url'){
            // create a card regarding the URL
            var str = "";
            str += '<div class="card grey lighten-4">';
            str += '<div class="card-content">';
            str += '<span class="card-title"><a href="'+data.payload.description.og.url+'">'+data.payload.description.meta.title+'</a></span>';
            str +=  '<p>'+data.payload.description.og.description+'</p>';
            str += '</div>';
            str +=  '</div>';
            console.log(data.payload);
            messageOut.append(str);
         }
         else if(data.type=='message'){
            // append the emited message as normal text
            messageOut.append("<div><p><b>"+data.sender+"</b>:"+data.messageString+"</p></div>");
         }
      });

      // hear for new users on room
      socket.on('newUser', function(data){
         messageOut.append("<div><p>New User <b>"+data.username+"</b></p></div>");
      });
   </script>
</html>